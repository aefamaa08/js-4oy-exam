const cart = JSON.parse(localStorage.getItem("cart")) || [];
const container = document.getElementById("cart-container");

if (cart.length === 0) {
    container.innerHTML = "<p style='font-size:20px; text-align:center; margin-top: 40px;'>üß∫ –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>";
} else {
    let html = "<ul style='list-style:none; padding:0;'>";
    let total = 0;  // –û–±—â–∞—è —Å—É–º–º–∞
    let totalItems = 0;  // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤

    cart.forEach((pizza, index) => {
        const pizzaTotal = pizza.price * pizza.quantity;  // –°—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö –ø–∏—Ü—Ü –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞
        total += pizzaTotal;  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –ø–∏—Ü—Ü—ã –≤ –æ–±—â—É—é —Å—É–º–º—É
        totalItems += pizza.quantity;  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏—Ü—Ü –≤ –æ–±—â–∏–π –∏—Ç–æ–≥

        html += `<li style="display:flex; justify-content:space-between; margin-bottom:10px; background:#fff; padding:10px; border-radius:8px;">
            <div>${pizza.name} ‚Äî ${pizza.price} ‚ÇΩ √ó ${pizza.quantity} —à—Ç = ${pizzaTotal} ‚ÇΩ</div>
            <button onclick="removeItem(${index})" class="add-btn">–£–¥–∞–ª–∏—Ç—å</button>
        </li>`;
    });

    html += "</ul>";
    html += `<p><strong>–ò—Ç–æ–≥–æ:</strong> ${total} ‚ÇΩ (${totalItems} —à—Ç.)</p>`;  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
    html += `<button onclick="clearCart()" class="add-btn">–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É</button>`;
    container.innerHTML = html;
}

function removeItem(index) {
    cart.splice(index, 1);  // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    localStorage.setItem("cart", JSON.stringify(cart));  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage
    location.reload();  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
}

function clearCart() {
    localStorage.removeItem("cart");  // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –≤ localStorage
    location.reload();  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
}
